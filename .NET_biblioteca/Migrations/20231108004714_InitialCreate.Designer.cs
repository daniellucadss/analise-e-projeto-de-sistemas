// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

#nullable disable

namespace _NET_biblioteca.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20231108004714_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BibliotecarioMembro", b =>
                {
                    b.Property<int>("BibliotecarioId")
                        .HasColumnType("int");

                    b.Property<int>("MembrosId")
                        .HasColumnType("int");

                    b.HasKey("BibliotecarioId", "MembrosId");

                    b.HasIndex("MembrosId");

                    b.ToTable("BibliotecarioMembro");
                });

            modelBuilder.Entity("Models.Alertas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BibliotecarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataRetorno")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Multa")
                        .HasColumnType("int");

                    b.Property<string>("NomeLivro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BibliotecarioId");

                    b.ToTable("Alertas");
                });

            modelBuilder.Entity("Models.Bibliotecario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Contato")
                        .HasColumnType("int");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Bibliotecario");
                });

            modelBuilder.Entity("Models.Catalogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NomeAutor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NumeroCopias")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Catalogo");
                });

            modelBuilder.Entity("Models.Livros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BibliotecarioId")
                        .HasColumnType("int");

                    b.Property<int>("CatalogoId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("MembroId")
                        .HasColumnType("int");

                    b.Property<string>("NomeAutor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomeLivro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("QuantidadeLivro")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BibliotecarioId");

                    b.HasIndex("CatalogoId");

                    b.HasIndex("MembroId");

                    b.ToTable("Livros");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Livros");
                });

            modelBuilder.Entity("Models.Membro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Contato")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Membro");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Membro");
                });

            modelBuilder.Entity("Models.CorpoDocente", b =>
                {
                    b.HasBaseType("Models.Membro");

                    b.Property<string>("Facultycoll")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("CorpoDocente");
                });

            modelBuilder.Entity("Models.Estudante", b =>
                {
                    b.HasBaseType("Models.Membro");

                    b.Property<string>("Studentcoll")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("Estudante");
                });

            modelBuilder.Entity("Models.LivroGeral", b =>
                {
                    b.HasBaseType("Models.Livros");

                    b.HasDiscriminator().HasValue("LivroGeral");
                });

            modelBuilder.Entity("Models.LivroReferencia", b =>
                {
                    b.HasBaseType("Models.Livros");

                    b.HasDiscriminator().HasValue("LivroReferencia");
                });

            modelBuilder.Entity("BibliotecarioMembro", b =>
                {
                    b.HasOne("Models.Bibliotecario", null)
                        .WithMany()
                        .HasForeignKey("BibliotecarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Membro", null)
                        .WithMany()
                        .HasForeignKey("MembrosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Alertas", b =>
                {
                    b.HasOne("Models.Bibliotecario", "Bibliotecario")
                        .WithMany("Alertas")
                        .HasForeignKey("BibliotecarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bibliotecario");
                });

            modelBuilder.Entity("Models.Livros", b =>
                {
                    b.HasOne("Models.Bibliotecario", "Bibliotecario")
                        .WithMany("Livros")
                        .HasForeignKey("BibliotecarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Catalogo", "Catalogo")
                        .WithMany("Livros")
                        .HasForeignKey("CatalogoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Membro", null)
                        .WithMany("Livros")
                        .HasForeignKey("MembroId");

                    b.Navigation("Bibliotecario");

                    b.Navigation("Catalogo");
                });

            modelBuilder.Entity("Models.Bibliotecario", b =>
                {
                    b.Navigation("Alertas");

                    b.Navigation("Livros");
                });

            modelBuilder.Entity("Models.Catalogo", b =>
                {
                    b.Navigation("Livros");
                });

            modelBuilder.Entity("Models.Membro", b =>
                {
                    b.Navigation("Livros");
                });
#pragma warning restore 612, 618
        }
    }
}
