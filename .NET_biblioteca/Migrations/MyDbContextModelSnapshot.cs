// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dotNET_biblioteca.Models;

#nullable disable

namespace dotNET_biblioteca.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("dotNET_biblioteca.Models.Alert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Fine")
                        .HasColumnType("int");

                    b.Property<DateOnly>("IssueDate")
                        .HasColumnType("date");

                    b.Property<int?>("LibrarianId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("ReturnDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("LibrarianId");

                    b.ToTable("Alerts");
                });

            modelBuilder.Entity("dotNET_biblioteca.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("CatalogId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("LibrarianId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfBooks")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CatalogId");

                    b.HasIndex("LibrarianId");

                    b.HasIndex("MemberId");

                    b.ToTable("Books");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Book");
                });

            modelBuilder.Entity("dotNET_biblioteca.Models.Catalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NumberOfCopies")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Catalogs");
                });

            modelBuilder.Entity("dotNET_biblioteca.Models.Librarian", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Librarians");
                });

            modelBuilder.Entity("dotNET_biblioteca.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("LibrarianId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LibrarianId");

                    b.ToTable("Members");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Member");
                });

            modelBuilder.Entity("dotNET_biblioteca.Models.FacultyMember", b =>
                {
                    b.HasBaseType("dotNET_biblioteca.Models.Member");

                    b.Property<string>("Facultycoll")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("FacultyMember");
                });

            modelBuilder.Entity("dotNET_biblioteca.Models.GeneralBook", b =>
                {
                    b.HasBaseType("dotNET_biblioteca.Models.Book");

                    b.HasDiscriminator().HasValue("GeneralBook");
                });

            modelBuilder.Entity("dotNET_biblioteca.Models.ReferenceBook", b =>
                {
                    b.HasBaseType("dotNET_biblioteca.Models.Book");

                    b.HasDiscriminator().HasValue("ReferenceBook");
                });

            modelBuilder.Entity("dotNET_biblioteca.Models.Student", b =>
                {
                    b.HasBaseType("dotNET_biblioteca.Models.Member");

                    b.Property<string>("Studentcoll")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("Student");
                });

            modelBuilder.Entity("dotNET_biblioteca.Models.Alert", b =>
                {
                    b.HasOne("dotNET_biblioteca.Models.Librarian", null)
                        .WithMany("Alerts")
                        .HasForeignKey("LibrarianId");
                });

            modelBuilder.Entity("dotNET_biblioteca.Models.Book", b =>
                {
                    b.HasOne("dotNET_biblioteca.Models.Catalog", "Catalog")
                        .WithMany("Books")
                        .HasForeignKey("CatalogId");

                    b.HasOne("dotNET_biblioteca.Models.Librarian", null)
                        .WithMany("Books")
                        .HasForeignKey("LibrarianId");

                    b.HasOne("dotNET_biblioteca.Models.Member", null)
                        .WithMany("Books")
                        .HasForeignKey("MemberId");

                    b.Navigation("Catalog");
                });

            modelBuilder.Entity("dotNET_biblioteca.Models.Member", b =>
                {
                    b.HasOne("dotNET_biblioteca.Models.Librarian", null)
                        .WithMany("Members")
                        .HasForeignKey("LibrarianId");
                });

            modelBuilder.Entity("dotNET_biblioteca.Models.Catalog", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("dotNET_biblioteca.Models.Librarian", b =>
                {
                    b.Navigation("Alerts");

                    b.Navigation("Books");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("dotNET_biblioteca.Models.Member", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
